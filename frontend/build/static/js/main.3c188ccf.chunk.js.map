{"version":3,"sources":["Blob.js","App.js","reportWebVitals.js","index.js"],"names":["getCookie","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","Blob","state","stars","setStars","bind","fetchRepo","numStars","this","setState","axios","defaults","xsrfCookieName","method","url","headers","then","res","data","stargazers_count","catch","err","console","log","onClick","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAGA,SAASA,EAAUC,GAGf,IAFA,IAAIC,EAAOD,EAAQ,IACfE,EAAKC,SAASC,OAAOC,MAAM,KACvBC,EAAE,EAAGA,EAAEJ,EAAGK,OAAQD,IAAK,CAE5B,IADA,IAAIE,EAAIN,EAAGI,GACU,MAAdE,EAAEC,OAAO,IAAUD,EAAIA,EAAEE,UAAU,GAC1C,GAAuB,IAApBF,EAAEG,QAAQV,GACV,OAAOO,EAAEE,UAAUT,EAAKM,OAAOC,EAAED,QAEvC,MAAO,G,IAoDIK,E,kDA/CX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,MAAO,GAGX,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBARP,E,4CAWd,SAASE,GACLC,KAAKC,SAAS,CAAEN,MAAOI,M,uBAI3B,WAAa,IAAD,OACRG,IAAMC,SAASC,eAAiB,YAGhCF,IAAM,CACFG,OAAQ,MACRC,IAAI,0BACJC,QAAS,CAAC,cAAe3B,EAAU,gBAEtC4B,MAAK,SAASC,GACX,OAAOA,KAEVD,MAAK,SAACC,GAAD,OAAS,EAAKb,SAASa,EAAIC,KAAKC,qBACrCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,oBAIhC,WAEI,OACI,wCAEI,wBAAQG,QAAShB,KAAKF,UAAtB,uBAFJ,cAGgBE,KAAKN,MAAMC,a,GAzCpBsB,IAAMC,WCFVC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,SAM1BX,M","file":"static/js/main.3c188ccf.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0; i<ca.length; i++) {\n       var c = ca[i];\n       while (c.charAt(0)===' ') c = c.substring(1);\n       if(c.indexOf(name) === 0)\n          return c.substring(name.length,c.length);\n    }\n    return \"\";\n}\n\nclass Blob extends React.Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            stars: 0\n        }\n\n        this.setStars = this.setStars.bind(this)\n        this.fetchRepo = this.fetchRepo.bind(this)\n    }\n\n    setStars(numStars) {\n        this.setState({ stars: numStars})\n    }\n\n\n    fetchRepo() {\n        axios.defaults.xsrfCookieName = 'csrftoken';\n\n\n        axios({\n            method: 'get',\n            url: `/api/repos/ucfopen/vast`,\n            headers: {\"X-CSRFToken\": getCookie('csrftoken')}\n        })\n        .then(function(res) {\n            return res\n        })\n        .then((res) => this.setStars(res.data.stargazers_count))\n        .catch((err) => console.log(err))\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                Hello\n                <button onClick={this.fetchRepo}>Click Me!</button>\n                Num Stars: {this.state.stars}\n            </div>\n        )\n    }\n\n\n}\n\nexport default Blob;\n","\nimport './App.css';\n\nimport Blob from './Blob'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Blob />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}