{"version":3,"sources":["components/InputForm.js","components/RepoName.js","components/RepoDescription.js","components/RepoOwner.js","components/Forks.js","components/Stars.js","components/Issues.js","components/RepoStats.js","components/RepoInfo.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["InputForm","props","handleSearch","bind","e","preventDefault","owner","document","getElementById","value","name","this","className","id","onSubmit","type","placeholder","React","Component","RepoName","RepoDescription","description","RepoOwner","picture","src","alt","Forks","fork_count","Stars","star_count","Issues","issue_count","RepoStats","forks","stars","issues","RepoInfo","info","stargazers_count","open_issues","login","avatar_url","getCookie","cname","ca","cookie","split","i","length","c","charAt","substring","indexOf","Home","state","repoData","undefined","fetchRepo","setRepoInfo","data","setState","repo_owner","repo_name","axios","defaults","xsrfCookieName","method","url","headers","then","res","console","log","catch","err","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d38b0c85.chunk.js","sourcesContent":["import React from 'react';\n\nclass InputForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    handleSearch(e) {\n        e.preventDefault()\n\n        let owner = document.getElementById('owner').value\n        let name = document.getElementById('name').value\n\n        this.props.handleSearch(owner, name)\n    }\n\n    render() {\n\n        return(\n            <div className=\"input-form\">\n                <form id=\"repo-form\" onSubmit={this.handleSearch}>\n                    github.com/\n                    <input type=\"text\" id=\"owner\" name=\"owner\" placeholder=\"repo owner\"></input>\n                    /\n                    <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"repo name\"></input>\n                    <input type=\"submit\" value=\"Search\" id=\"repo-submit\"></input>\n                </form>\n\n            </div>\n        )\n\n    }\n\n}\n\nexport default InputForm;\n","function RepoName(props) {\n\n    const { name } = props;\n\n    return(\n        <div className=\"repo-name\">\n            Name: {name}\n        </div>\n    )\n}\n\nexport default RepoName;\n","function RepoDescription(props) {\n\n    const { description } = props;\n\n    return(\n        <div className=\"repo-description\">\n            Description: {description}\n        </div>\n    )\n\n}\n\nexport default RepoDescription;\n","function RepoOwner(props) {\n\n    const { owner, picture } = props;\n\n    return(\n        <div className=\"repo-owner\">\n            Owner: {owner}\n            <img src={picture} alt=\"avatar profile\"/>\n        </div>\n    )\n\n}\n\nexport default RepoOwner;\n","function Forks(props) {\n\n    const { fork_count } = props;\n\n    return(\n        <div className=\"forks\">\n            Forks: {fork_count}\n        </div>\n    )\n\n}\n\nexport default Forks;\n","function Stars(props) {\n\n    const { star_count } = props;\n\n    return(\n        <div className=\"stars\">\n            Stars: {star_count}\n        </div>\n    )\n\n}\n\nexport default Stars;\n","function Issues(props) {\n\n    const { issue_count } = props;\n\n    return(\n        <div className=\"issues\">\n            Issues: {issue_count}\n        </div>\n    )\n\n}\n\nexport default Issues;\n","import Forks from './Forks'\nimport Stars from './Stars'\nimport Issues from './Issues'\n\nfunction RepoStats(props) {\n\n    const { forks, stars, issues } = props;\n\n    return(\n        <div className=\"repo-owner\">\n            <Forks fork_count={forks} />\n            <Stars star_count={stars} />\n            <Issues issue_count={issues} />\n        </div>\n    )\n\n}\n\nexport default RepoStats;\n","import RepoName from './RepoName'\nimport RepoDescription from './RepoDescription'\nimport RepoOwner from './RepoOwner'\nimport RepoStats from './RepoStats'\n\n\nfunction RepoInfo(props) {\n\n    let info = props.info\n\n    if (info) {\n        const { forks, name, description, stargazers_count, open_issues, owner: {login, avatar_url} } = info;\n\n        return(\n            <div>\n                <RepoName name={name} />\n                <RepoOwner owner={login} picture={avatar_url} />\n                <RepoDescription description={description} />\n                <RepoStats forks={forks} stars={stargazers_count} issues={open_issues}/>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                Search\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default RepoInfo;\n","import React from 'react'\nimport axios from 'axios'\n\nimport InputForm from './InputForm'\nimport RepoInfo from './RepoInfo'\n\nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0; i<ca.length; i++) {\n       var c = ca[i];\n       while (c.charAt(0)===' ') c = c.substring(1);\n       if(c.indexOf(name) === 0)\n          return c.substring(name.length,c.length);\n    }\n    return \"\";\n}\n\nclass Home extends React.Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            repoData: undefined\n        }\n\n        this.fetchRepo = this.fetchRepo.bind(this);\n        this.setRepoInfo = this.setRepoInfo.bind(this);\n\n    }\n\n    setRepoInfo(data) {\n        this.setState({repoData: data})\n    }\n\n\n    fetchRepo(repo_owner, repo_name) {\n\n        axios.defaults.xsrfCookieName = 'csrftoken';\n\n\n        axios({\n            method: 'get',\n            url: `/api/repos/${repo_owner}/${repo_name}`,\n            headers: {\"X-CSRFToken\": getCookie('csrftoken')}\n        })\n        .then(function(res) {\n            console.log(res.data)\n            return res\n        })\n        .then((res) => this.setRepoInfo(res.data))\n        .catch((err) => console.log(err))\n\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Repovis</h1>\n                <InputForm\n                    handleSearch={this.fetchRepo}\n                />\n                <RepoInfo info={this.state.repoData}/>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Home;\n","\nimport './App.css';\n\nimport Home from './components/Home'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}